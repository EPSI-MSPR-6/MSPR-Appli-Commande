
name: Build and Deploy API Orders

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

env: 
  GOOGLE_PROJECT: ${{ secrets.PROJECT_ID }}
  REGION: ${{ secrets.REGION }}
  REPOSITORIES: ${{ secrets.REPO_ARTIFACT_REGISTRY }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  VERSION: ${{ secrets.VERSION }}
  FIREBASE_CLIENT_EMAIL : ${{ secrets.FIREBASE_CLIENT_EMAIL }}
  FIREBASE_PRIVATE_KEY : ${{ secrets.FIREBASE_PRIVATE_KEY }}

jobs:

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: run npm test
        run: |
          npm i
          npm test
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
         

  deploy:
    runs-on: ubuntu-latest
    needs: sonarcloud

    steps:
      - name: Code checkout
        uses: actions/checkout@v2

      - name: Install GCloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          export_default_credentials: true

      - name: Authenticate with gcloud
        env:
          SERVICE_ACCOUNT_KEY: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        run: |
          echo "$SERVICE_ACCOUNT_KEY" > gcloud-service-key.json
          gcloud auth activate-service-account --key-file=gcloud-service-key.json

      - name: Docker Authentication
        run: |
          gcloud auth configure-docker $REGION-docker.pkg.dev --quiet

      - name: Build and push container
        run: |
          docker build -t $REGION-docker.pkg.dev/$GOOGLE_PROJECT/$REPOSITORIES/$IMAGE_NAME:$VERSION .
          docker push $REGION-docker.pkg.dev/$GOOGLE_PROJECT/$REPOSITORIES/$IMAGE_NAME:$VERSION
           
      - name: Deploy Cloud Run
        run: |
          gcloud run deploy $IMAGE_NAME \
            --image $REGION-docker.pkg.dev/$GOOGLE_PROJECT/$REPOSITORIES/$IMAGE_NAME:$VERSION \
            --region $REGION